# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import service_pb2 as service__pb2


class ScoringPoseServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.loadService = channel.unary_unary(
                '/ScoringPoseService/loadService',
                request_serializer=service__pb2.loadData.SerializeToString,
                response_deserializer=service__pb2.loadStatus.FromString,
                )
        self.getScore = channel.unary_unary(
                '/ScoringPoseService/getScore',
                request_serializer=service__pb2.ImageRequest.SerializeToString,
                response_deserializer=service__pb2.ScoreResponse.FromString,
                )


class ScoringPoseService(object):
    """Missing associated documentation comment in .proto file."""

    def loadService(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getScore(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ScoringPoseServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'loadService': grpc.unary_unary_rpc_method_handler(
                    servicer.loadService,
                    request_deserializer=service__pb2.loadData.FromString,
                    response_serializer=service__pb2.loadStatus.SerializeToString,
            ),
            'getScore': grpc.unary_unary_rpc_method_handler(
                    servicer.getScore,
                    request_deserializer=service__pb2.ImageRequest.FromString,
                    response_serializer=service__pb2.ScoreResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ScoringPoseService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
